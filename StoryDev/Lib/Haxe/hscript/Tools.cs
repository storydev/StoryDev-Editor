// Generated by Haxe 4.1.5

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hscript {
	public class Tools : global::haxe.lang.HxObject {
		
		public Tools(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Tools() {
			global::hscript.Tools.__hx_ctor_hscript_Tools(this);
		}
		
		
		protected static void __hx_ctor_hscript_Tools(global::hscript.Tools __hx_this) {
		}
		
		
		public static void iter(global::hscript.Expr e, global::haxe.lang.Function f) {
			unchecked {
				switch (e._hx_index) {
					case 0:
					{
						global::hscript.Const _g = ( e as global::hscript.Expr_EConst ).c;
						break;
					}
					
					
					case 1:
					{
						string _g1 = ( e as global::hscript.Expr_EIdent ).v;
						break;
					}
					
					
					case 2:
					{
						global::hscript.CType _g2 = ( e as global::hscript.Expr_EVar ).t;
						string _g3 = ( e as global::hscript.Expr_EVar ).n;
						{
							global::hscript.Expr e1 = ( e as global::hscript.Expr_EVar ).e;
							if (( e1 != null )) {
								f.__hx_invoke1_o(default(double), e1);
							}
							
						}
						
						break;
					}
					
					
					case 3:
					{
						global::hscript.Expr e2 = ( e as global::hscript.Expr_EParent ).e;
						f.__hx_invoke1_o(default(double), e2);
						break;
					}
					
					
					case 4:
					{
						global::Array<object> el = ( e as global::hscript.Expr_EBlock ).e;
						{
							int _g4 = 0;
							while (( _g4 < el.length )) {
								global::hscript.Expr e3 = ((global::hscript.Expr) (el[_g4]) );
								 ++ _g4;
								f.__hx_invoke1_o(default(double), e3);
							}
							
						}
						
						break;
					}
					
					
					case 5:
					{
						string _g5 = ( e as global::hscript.Expr_EField ).f;
						{
							global::hscript.Expr e4 = ( e as global::hscript.Expr_EField ).e;
							f.__hx_invoke1_o(default(double), e4);
						}
						
						break;
					}
					
					
					case 6:
					{
						string _g6 = ( e as global::hscript.Expr_EBinop ).op;
						{
							global::hscript.Expr e21 = ( e as global::hscript.Expr_EBinop ).e2;
							global::hscript.Expr e11 = ( e as global::hscript.Expr_EBinop ).e1;
							{
								f.__hx_invoke1_o(default(double), e11);
								f.__hx_invoke1_o(default(double), e21);
							}
							
						}
						
						break;
					}
					
					
					case 7:
					{
						bool _g7 = ( e as global::hscript.Expr_EUnop ).prefix;
						string _g8 = ( e as global::hscript.Expr_EUnop ).op;
						{
							global::hscript.Expr e5 = ( e as global::hscript.Expr_EUnop ).e;
							f.__hx_invoke1_o(default(double), e5);
						}
						
						break;
					}
					
					
					case 8:
					{
						global::Array<object> args = ( e as global::hscript.Expr_ECall ).@params;
						global::hscript.Expr e6 = ( e as global::hscript.Expr_ECall ).e;
						{
							f.__hx_invoke1_o(default(double), e6);
							{
								int _g9 = 0;
								while (( _g9 < args.length )) {
									global::hscript.Expr a = ((global::hscript.Expr) (args[_g9]) );
									 ++ _g9;
									f.__hx_invoke1_o(default(double), a);
								}
								
							}
							
						}
						
						break;
					}
					
					
					case 9:
					{
						global::hscript.Expr e22 = ( e as global::hscript.Expr_EIf ).e2;
						global::hscript.Expr e12 = ( e as global::hscript.Expr_EIf ).e1;
						global::hscript.Expr c = ( e as global::hscript.Expr_EIf ).cond;
						{
							f.__hx_invoke1_o(default(double), c);
							f.__hx_invoke1_o(default(double), e12);
							if (( e22 != null )) {
								f.__hx_invoke1_o(default(double), e22);
							}
							
						}
						
						break;
					}
					
					
					case 10:
					{
						global::hscript.Expr e7 = ( e as global::hscript.Expr_EWhile ).e;
						global::hscript.Expr c1 = ( e as global::hscript.Expr_EWhile ).cond;
						{
							f.__hx_invoke1_o(default(double), c1);
							f.__hx_invoke1_o(default(double), e7);
						}
						
						break;
					}
					
					
					case 11:
					{
						string _g10 = ( e as global::hscript.Expr_EFor ).v;
						{
							global::hscript.Expr e8 = ( e as global::hscript.Expr_EFor ).e;
							global::hscript.Expr it = ( e as global::hscript.Expr_EFor ).it;
							{
								f.__hx_invoke1_o(default(double), it);
								f.__hx_invoke1_o(default(double), e8);
							}
							
						}
						
						break;
					}
					
					
					case 12:
					case 13:
					{
						break;
					}
					
					
					case 14:
					{
						global::hscript.CType _g11 = ( e as global::hscript.Expr_EFunction ).ret;
						string _g12 = ( e as global::hscript.Expr_EFunction ).name;
						global::Array<object> _g13 = ( e as global::hscript.Expr_EFunction ).args;
						{
							global::hscript.Expr e9 = ( e as global::hscript.Expr_EFunction ).e;
							f.__hx_invoke1_o(default(double), e9);
						}
						
						break;
					}
					
					
					case 15:
					{
						global::hscript.Expr e10 = ( e as global::hscript.Expr_EReturn ).e;
						if (( e10 != null )) {
							f.__hx_invoke1_o(default(double), e10);
						}
						
						break;
					}
					
					
					case 16:
					{
						global::hscript.Expr i = ( e as global::hscript.Expr_EArray ).index;
						global::hscript.Expr e13 = ( e as global::hscript.Expr_EArray ).e;
						{
							f.__hx_invoke1_o(default(double), e13);
							f.__hx_invoke1_o(default(double), i);
						}
						
						break;
					}
					
					
					case 17:
					{
						global::Array<object> el1 = ( e as global::hscript.Expr_EArrayDecl ).e;
						{
							int _g14 = 0;
							while (( _g14 < el1.length )) {
								global::hscript.Expr e14 = ((global::hscript.Expr) (el1[_g14]) );
								 ++ _g14;
								f.__hx_invoke1_o(default(double), e14);
							}
							
						}
						
						break;
					}
					
					
					case 18:
					{
						string _g15 = ( e as global::hscript.Expr_ENew ).cl;
						{
							global::Array<object> el2 = ( e as global::hscript.Expr_ENew ).@params;
							{
								int _g16 = 0;
								while (( _g16 < el2.length )) {
									global::hscript.Expr e15 = ((global::hscript.Expr) (el2[_g16]) );
									 ++ _g16;
									f.__hx_invoke1_o(default(double), e15);
								}
								
							}
							
						}
						
						break;
					}
					
					
					case 19:
					{
						global::hscript.Expr e16 = ( e as global::hscript.Expr_EThrow ).e;
						f.__hx_invoke1_o(default(double), e16);
						break;
					}
					
					
					case 20:
					{
						global::hscript.CType _g17 = ( e as global::hscript.Expr_ETry ).t;
						string _g18 = ( e as global::hscript.Expr_ETry ).v;
						{
							global::hscript.Expr c2 = ( e as global::hscript.Expr_ETry ).ecatch;
							global::hscript.Expr e17 = ( e as global::hscript.Expr_ETry ).e;
							{
								f.__hx_invoke1_o(default(double), e17);
								f.__hx_invoke1_o(default(double), c2);
							}
							
						}
						
						break;
					}
					
					
					case 21:
					{
						global::Array<object> fl = ( e as global::hscript.Expr_EObject ).fl;
						{
							int _g19 = 0;
							while (( _g19 < fl.length )) {
								object fi = fl[_g19];
								 ++ _g19;
								f.__hx_invoke1_o(default(double), ((global::hscript.Expr) (global::haxe.lang.Runtime.getField(fi, "e", 101, true)) ));
							}
							
						}
						
						break;
					}
					
					
					case 22:
					{
						global::hscript.Expr e23 = ( e as global::hscript.Expr_ETernary ).e2;
						global::hscript.Expr e18 = ( e as global::hscript.Expr_ETernary ).e1;
						global::hscript.Expr c3 = ( e as global::hscript.Expr_ETernary ).cond;
						{
							f.__hx_invoke1_o(default(double), c3);
							f.__hx_invoke1_o(default(double), e18);
							f.__hx_invoke1_o(default(double), e23);
						}
						
						break;
					}
					
					
					case 23:
					{
						global::hscript.Expr def = ( e as global::hscript.Expr_ESwitch ).defaultExpr;
						global::Array<object> cases = ( e as global::hscript.Expr_ESwitch ).cases;
						global::hscript.Expr e19 = ( e as global::hscript.Expr_ESwitch ).e;
						{
							f.__hx_invoke1_o(default(double), e19);
							{
								int _g20 = 0;
								while (( _g20 < cases.length )) {
									object c4 = cases[_g20];
									 ++ _g20;
									{
										int _g21 = 0;
										global::Array<object> _g22 = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(c4, "values", 1337394146, true)) ))) );
										while (( _g21 < _g22.length )) {
											global::hscript.Expr v = ((global::hscript.Expr) (_g22[_g21]) );
											 ++ _g21;
											f.__hx_invoke1_o(default(double), v);
										}
										
									}
									
									f.__hx_invoke1_o(default(double), ((global::hscript.Expr) (global::haxe.lang.Runtime.getField(c4, "expr", 1126038837, true)) ));
								}
								
							}
							
							if (( def != null )) {
								f.__hx_invoke1_o(default(double), def);
							}
							
						}
						
						break;
					}
					
					
					case 24:
					{
						global::hscript.Expr e20 = ( e as global::hscript.Expr_EDoWhile ).e;
						global::hscript.Expr c5 = ( e as global::hscript.Expr_EDoWhile ).cond;
						{
							f.__hx_invoke1_o(default(double), c5);
							f.__hx_invoke1_o(default(double), e20);
						}
						
						break;
					}
					
					
					case 25:
					{
						global::hscript.Expr e24 = ( e as global::hscript.Expr_EMeta ).e;
						global::Array<object> args1 = ( e as global::hscript.Expr_EMeta ).args;
						string name = ( e as global::hscript.Expr_EMeta ).name;
						{
							if (( args1 != null )) {
								int _g23 = 0;
								while (( _g23 < args1.length )) {
									global::hscript.Expr a1 = ((global::hscript.Expr) (args1[_g23]) );
									 ++ _g23;
									f.__hx_invoke1_o(default(double), a1);
								}
								
							}
							
							f.__hx_invoke1_o(default(double), e24);
						}
						
						break;
					}
					
					
					case 26:
					{
						global::hscript.CType _g24 = ( e as global::hscript.Expr_ECheckType ).t;
						{
							global::hscript.Expr e25 = ( e as global::hscript.Expr_ECheckType ).e;
							f.__hx_invoke1_o(default(double), e25);
						}
						
						break;
					}
					
					
				}
				
			}
		}
		
		
		public static global::hscript.Expr map(global::hscript.Expr e, global::haxe.lang.Function f) {
			unchecked {
				global::hscript.Expr edef = null;
				switch (e._hx_index) {
					case 0:
					{
						global::hscript.Const _g = ( e as global::hscript.Expr_EConst ).c;
						edef = e;
						break;
					}
					
					
					case 1:
					{
						string _g1 = ( e as global::hscript.Expr_EIdent ).v;
						edef = e;
						break;
					}
					
					
					case 2:
					{
						global::hscript.Expr e1 = ( e as global::hscript.Expr_EVar ).e;
						global::hscript.CType t = ( e as global::hscript.Expr_EVar ).t;
						string n = ( e as global::hscript.Expr_EVar ).n;
						edef = global::hscript.Expr.EVar(n, t, ( (( e1 != null )) ? (((global::hscript.Expr) (f.__hx_invoke1_o(default(double), e1)) )) : (null) ));
						break;
					}
					
					
					case 3:
					{
						global::hscript.Expr e2 = ( e as global::hscript.Expr_EParent ).e;
						edef = global::hscript.Expr.EParent(((global::hscript.Expr) (f.__hx_invoke1_o(default(double), e2)) ));
						break;
					}
					
					
					case 4:
					{
						global::Array<object> el = ( e as global::hscript.Expr_EBlock ).e;
						global::Array<object> _g2 = new global::Array<object>(new object[]{});
						{
							int _g3 = 0;
							while (( _g3 < el.length )) {
								global::hscript.Expr e3 = ((global::hscript.Expr) (el[_g3]) );
								 ++ _g3;
								_g2.push(((global::hscript.Expr) (f.__hx_invoke1_o(default(double), e3)) ));
							}
							
						}
						
						edef = global::hscript.Expr.EBlock(_g2);
						break;
					}
					
					
					case 5:
					{
						string fi = ( e as global::hscript.Expr_EField ).f;
						global::hscript.Expr e4 = ( e as global::hscript.Expr_EField ).e;
						edef = global::hscript.Expr.EField(((global::hscript.Expr) (f.__hx_invoke1_o(default(double), e4)) ), fi);
						break;
					}
					
					
					case 6:
					{
						global::hscript.Expr e21 = ( e as global::hscript.Expr_EBinop ).e2;
						global::hscript.Expr e11 = ( e as global::hscript.Expr_EBinop ).e1;
						string op = ( e as global::hscript.Expr_EBinop ).op;
						edef = global::hscript.Expr.EBinop(op, ((global::hscript.Expr) (f.__hx_invoke1_o(default(double), e11)) ), ((global::hscript.Expr) (f.__hx_invoke1_o(default(double), e21)) ));
						break;
					}
					
					
					case 7:
					{
						global::hscript.Expr e5 = ( e as global::hscript.Expr_EUnop ).e;
						bool pre = ( e as global::hscript.Expr_EUnop ).prefix;
						string op1 = ( e as global::hscript.Expr_EUnop ).op;
						edef = global::hscript.Expr.EUnop(op1, pre, ((global::hscript.Expr) (f.__hx_invoke1_o(default(double), e5)) ));
						break;
					}
					
					
					case 8:
					{
						global::Array<object> args = ( e as global::hscript.Expr_ECall ).@params;
						global::hscript.Expr e6 = ( e as global::hscript.Expr_ECall ).e;
						global::hscript.Expr edef1 = ((global::hscript.Expr) (f.__hx_invoke1_o(default(double), e6)) );
						global::Array<object> _g4 = new global::Array<object>(new object[]{});
						{
							int _g5 = 0;
							while (( _g5 < args.length )) {
								global::hscript.Expr a = ((global::hscript.Expr) (args[_g5]) );
								 ++ _g5;
								_g4.push(((global::hscript.Expr) (f.__hx_invoke1_o(default(double), a)) ));
							}
							
						}
						
						edef = global::hscript.Expr.ECall(edef1, _g4);
						break;
					}
					
					
					case 9:
					{
						global::hscript.Expr e22 = ( e as global::hscript.Expr_EIf ).e2;
						global::hscript.Expr e12 = ( e as global::hscript.Expr_EIf ).e1;
						global::hscript.Expr c = ( e as global::hscript.Expr_EIf ).cond;
						edef = global::hscript.Expr.EIf(((global::hscript.Expr) (f.__hx_invoke1_o(default(double), c)) ), ((global::hscript.Expr) (f.__hx_invoke1_o(default(double), e12)) ), ( (( e22 != null )) ? (((global::hscript.Expr) (f.__hx_invoke1_o(default(double), e22)) )) : (null) ));
						break;
					}
					
					
					case 10:
					{
						global::hscript.Expr e7 = ( e as global::hscript.Expr_EWhile ).e;
						global::hscript.Expr c1 = ( e as global::hscript.Expr_EWhile ).cond;
						edef = global::hscript.Expr.EWhile(((global::hscript.Expr) (f.__hx_invoke1_o(default(double), c1)) ), ((global::hscript.Expr) (f.__hx_invoke1_o(default(double), e7)) ));
						break;
					}
					
					
					case 11:
					{
						global::hscript.Expr e8 = ( e as global::hscript.Expr_EFor ).e;
						global::hscript.Expr it = ( e as global::hscript.Expr_EFor ).it;
						string v = ( e as global::hscript.Expr_EFor ).v;
						edef = global::hscript.Expr.EFor(v, ((global::hscript.Expr) (f.__hx_invoke1_o(default(double), it)) ), ((global::hscript.Expr) (f.__hx_invoke1_o(default(double), e8)) ));
						break;
					}
					
					
					case 12:
					case 13:
					{
						edef = e;
						break;
					}
					
					
					case 14:
					{
						global::hscript.CType t1 = ( e as global::hscript.Expr_EFunction ).ret;
						string name = ( e as global::hscript.Expr_EFunction ).name;
						global::hscript.Expr e9 = ( e as global::hscript.Expr_EFunction ).e;
						global::Array<object> args1 = ( e as global::hscript.Expr_EFunction ).args;
						edef = global::hscript.Expr.EFunction(args1, ((global::hscript.Expr) (f.__hx_invoke1_o(default(double), e9)) ), name, t1);
						break;
					}
					
					
					case 15:
					{
						global::hscript.Expr e10 = ( e as global::hscript.Expr_EReturn ).e;
						edef = global::hscript.Expr.EReturn(( (( e10 != null )) ? (((global::hscript.Expr) (f.__hx_invoke1_o(default(double), e10)) )) : (null) ));
						break;
					}
					
					
					case 16:
					{
						global::hscript.Expr i = ( e as global::hscript.Expr_EArray ).index;
						global::hscript.Expr e13 = ( e as global::hscript.Expr_EArray ).e;
						edef = global::hscript.Expr.EArray(((global::hscript.Expr) (f.__hx_invoke1_o(default(double), e13)) ), ((global::hscript.Expr) (f.__hx_invoke1_o(default(double), i)) ));
						break;
					}
					
					
					case 17:
					{
						global::Array<object> el1 = ( e as global::hscript.Expr_EArrayDecl ).e;
						global::Array<object> _g6 = new global::Array<object>(new object[]{});
						{
							int _g7 = 0;
							while (( _g7 < el1.length )) {
								global::hscript.Expr e14 = ((global::hscript.Expr) (el1[_g7]) );
								 ++ _g7;
								_g6.push(((global::hscript.Expr) (f.__hx_invoke1_o(default(double), e14)) ));
							}
							
						}
						
						edef = global::hscript.Expr.EArrayDecl(_g6);
						break;
					}
					
					
					case 18:
					{
						global::Array<object> el2 = ( e as global::hscript.Expr_ENew ).@params;
						string cl = ( e as global::hscript.Expr_ENew ).cl;
						global::Array<object> _g8 = new global::Array<object>(new object[]{});
						{
							int _g9 = 0;
							while (( _g9 < el2.length )) {
								global::hscript.Expr e15 = ((global::hscript.Expr) (el2[_g9]) );
								 ++ _g9;
								_g8.push(((global::hscript.Expr) (f.__hx_invoke1_o(default(double), e15)) ));
							}
							
						}
						
						edef = global::hscript.Expr.ENew(cl, _g8);
						break;
					}
					
					
					case 19:
					{
						global::hscript.Expr e16 = ( e as global::hscript.Expr_EThrow ).e;
						edef = global::hscript.Expr.EThrow(((global::hscript.Expr) (f.__hx_invoke1_o(default(double), e16)) ));
						break;
					}
					
					
					case 20:
					{
						global::hscript.Expr c2 = ( e as global::hscript.Expr_ETry ).ecatch;
						global::hscript.CType t2 = ( e as global::hscript.Expr_ETry ).t;
						string v1 = ( e as global::hscript.Expr_ETry ).v;
						global::hscript.Expr e17 = ( e as global::hscript.Expr_ETry ).e;
						edef = global::hscript.Expr.ETry(((global::hscript.Expr) (f.__hx_invoke1_o(default(double), e17)) ), v1, t2, ((global::hscript.Expr) (f.__hx_invoke1_o(default(double), c2)) ));
						break;
					}
					
					
					case 21:
					{
						global::Array<object> fl = ( e as global::hscript.Expr_EObject ).fl;
						global::Array<object> _g10 = new global::Array<object>(new object[]{});
						{
							int _g11 = 0;
							while (( _g11 < fl.length )) {
								object fi1 = fl[_g11];
								 ++ _g11;
								string fi2 = global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(fi1, "name", 1224700491, true));
								object __temp_stmt3 = null;
								{
									global::hscript.Expr __temp_odecl1 = ((global::hscript.Expr) (f.__hx_invoke1_o(default(double), ((global::hscript.Expr) (global::haxe.lang.Runtime.getField(fi1, "e", 101, true)) ))) );
									__temp_stmt3 = new global::haxe.lang.DynamicObject(new int[]{101, 1224700491}, new object[]{__temp_odecl1, fi2}, new int[]{}, new double[]{});
								}
								
								_g10.push(__temp_stmt3);
							}
							
						}
						
						edef = global::hscript.Expr.EObject(_g10);
						break;
					}
					
					
					case 22:
					{
						global::hscript.Expr e23 = ( e as global::hscript.Expr_ETernary ).e2;
						global::hscript.Expr e18 = ( e as global::hscript.Expr_ETernary ).e1;
						global::hscript.Expr c3 = ( e as global::hscript.Expr_ETernary ).cond;
						edef = global::hscript.Expr.ETernary(((global::hscript.Expr) (f.__hx_invoke1_o(default(double), c3)) ), ((global::hscript.Expr) (f.__hx_invoke1_o(default(double), e18)) ), ((global::hscript.Expr) (f.__hx_invoke1_o(default(double), e23)) ));
						break;
					}
					
					
					case 23:
					{
						global::hscript.Expr def = ( e as global::hscript.Expr_ESwitch ).defaultExpr;
						global::Array<object> cases = ( e as global::hscript.Expr_ESwitch ).cases;
						global::hscript.Expr e19 = ( e as global::hscript.Expr_ESwitch ).e;
						global::hscript.Expr edef2 = ((global::hscript.Expr) (f.__hx_invoke1_o(default(double), e19)) );
						global::Array<object> _g12 = new global::Array<object>(new object[]{});
						{
							int _g13 = 0;
							while (( _g13 < cases.length )) {
								object c4 = cases[_g13];
								 ++ _g13;
								global::Array<object> _g14 = new global::Array<object>(new object[]{});
								{
									int _g15 = 0;
									global::Array<object> _g16 = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(c4, "values", 1337394146, true)) ))) );
									while (( _g15 < _g16.length )) {
										global::hscript.Expr v2 = ((global::hscript.Expr) (_g16[_g15]) );
										 ++ _g15;
										_g14.push(((global::hscript.Expr) (f.__hx_invoke1_o(default(double), v2)) ));
									}
									
								}
								
								object __temp_stmt4 = null;
								{
									global::hscript.Expr __temp_odecl2 = ((global::hscript.Expr) (f.__hx_invoke1_o(default(double), ((global::hscript.Expr) (global::haxe.lang.Runtime.getField(c4, "expr", 1126038837, true)) ))) );
									__temp_stmt4 = new global::haxe.lang.DynamicObject(new int[]{1126038837, 1337394146}, new object[]{__temp_odecl2, _g14}, new int[]{}, new double[]{});
								}
								
								_g12.push(__temp_stmt4);
							}
							
						}
						
						edef = global::hscript.Expr.ESwitch(edef2, _g12, ( (( def == null )) ? (null) : (((global::hscript.Expr) (f.__hx_invoke1_o(default(double), def)) )) ));
						break;
					}
					
					
					case 24:
					{
						global::hscript.Expr e20 = ( e as global::hscript.Expr_EDoWhile ).e;
						global::hscript.Expr c5 = ( e as global::hscript.Expr_EDoWhile ).cond;
						edef = global::hscript.Expr.EDoWhile(((global::hscript.Expr) (f.__hx_invoke1_o(default(double), c5)) ), ((global::hscript.Expr) (f.__hx_invoke1_o(default(double), e20)) ));
						break;
					}
					
					
					case 25:
					{
						global::hscript.Expr e24 = ( e as global::hscript.Expr_EMeta ).e;
						global::Array<object> args2 = ( e as global::hscript.Expr_EMeta ).args;
						string name1 = ( e as global::hscript.Expr_EMeta ).name;
						global::Array<object> edef3 = null;
						if (( args2 == null )) {
							edef3 = null;
						}
						else {
							global::Array<object> _g17 = new global::Array<object>(new object[]{});
							{
								int _g18 = 0;
								while (( _g18 < args2.length )) {
									global::hscript.Expr a1 = ((global::hscript.Expr) (args2[_g18]) );
									 ++ _g18;
									_g17.push(((global::hscript.Expr) (f.__hx_invoke1_o(default(double), a1)) ));
								}
								
							}
							
							edef3 = _g17;
						}
						
						edef = global::hscript.Expr.EMeta(name1, edef3, ((global::hscript.Expr) (f.__hx_invoke1_o(default(double), e24)) ));
						break;
					}
					
					
					case 26:
					{
						global::hscript.CType t3 = ( e as global::hscript.Expr_ECheckType ).t;
						global::hscript.Expr e25 = ( e as global::hscript.Expr_ECheckType ).e;
						edef = global::hscript.Expr.ECheckType(((global::hscript.Expr) (f.__hx_invoke1_o(default(double), e25)) ), t3);
						break;
					}
					
					
				}
				
				return edef;
			}
		}
		
		
		public static global::hscript.Expr expr(global::hscript.Expr e) {
			return e;
		}
		
		
		public static global::hscript.Expr mk(global::hscript.Expr e, global::hscript.Expr p) {
			return e;
		}
		
		
	}
}


